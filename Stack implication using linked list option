#include <stdio.h>
#include <stdlib.h>
// Define the structure for a node in the linked list
struct Node {
    int data;
    struct Node* next;
};
// Initialize a pointer to the top of the stack
struct Node* top = NULL;
// Function to push an element onto the stack
void push(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = top;
    top = newNode;
}
// Function to pop an element from the stack
int pop() {
    if (top == NULL) {
        printf("Stack is empty\n");
        return -1; // Return an error value
    }
    int value = top->data;
    struct Node* temp = top;
    top = top->next;
    free(temp);
    return value;
}
// peek function create
void peek(){
if (top == NULL) {
        printf("Stack is empty\n");
        return ;
    }else
printf("Top elements=%d",*top);
}
//Create display function
void display(){
if (top == NULL) {
        printf("Stack is empty\n");
        printf("Can not display\n");
        return ;
}
 struct Node* temp = top;
     while (temp != NULL) {
    printf( "%d \t", temp->data);
       temp = temp->next;
}
} 
// Function to check if the stack is empty
int isEmpty() {
    if( top == NULL)
    printf("\nStack is Empty\n");
    else
printf("\nStack is Empty\n");
    }
int main() {
int option;
do
{
printf("--------My stsck manu----");
printf("\n tocheck our stack is empty or not :1 \n");
printf("\n  added element in our stack :2 \n");
printf("\n remove element in our stack :3 \n");
printf("\n to find our peek element in our stack :4 \n");
printf("\n display our stack:5\n");
printf("\n please enter our option \n");
scanf("%d",&option);
switch(option)
{
  
  case 1:
  isEmpty();
  break;
  
  case 2:
  printf("please enter element which added");
  int n;
  scanf("%d",&n);
  push(n);
  display();
  break;
case 3:
  pop();
  display();
  break;
case 4:
  peek();
  display();
  break;
case 5:

  display();
  break;
}
}
while(option!=6);

    return 0;
}
    
